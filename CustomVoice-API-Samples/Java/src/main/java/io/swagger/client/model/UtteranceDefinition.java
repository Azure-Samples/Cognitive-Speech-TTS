/*
 * Speech Services API v3.0-beta1
 * Speech Services API v3.0-beta1.
 *
 * OpenAPI spec version: v3.0-beta1
 * Contact: crservice@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * UtteranceDefinition
 */
public class UtteranceDefinition {
  @SerializedName("sessionId")
  private UUID sessionId = null;

  @SerializedName("isHumanTranscription")
  private Boolean isHumanTranscription = null;

  @SerializedName("lexicalForm")
  private String lexicalForm = null;

  @SerializedName("startTimeOffset")
  private String startTimeOffset = null;

  @SerializedName("duration")
  private String duration = null;

  public UtteranceDefinition sessionId(UUID sessionId) {
    this.sessionId = sessionId;
    return this;
  }

   /**
   * The id of the session (audio file name)
   * @return sessionId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", required = true, value = "The id of the session (audio file name)")
  public UUID getSessionId() {
    return sessionId;
  }

  public void setSessionId(UUID sessionId) {
    this.sessionId = sessionId;
  }

  public UtteranceDefinition isHumanTranscription(Boolean isHumanTranscription) {
    this.isHumanTranscription = isHumanTranscription;
    return this;
  }

   /**
   * A value indicating whether it is a human transcription
   * @return isHumanTranscription
  **/
  @ApiModelProperty(required = true, value = "A value indicating whether it is a human transcription")
  public Boolean isIsHumanTranscription() {
    return isHumanTranscription;
  }

  public void setIsHumanTranscription(Boolean isHumanTranscription) {
    this.isHumanTranscription = isHumanTranscription;
  }

  public UtteranceDefinition lexicalForm(String lexicalForm) {
    this.lexicalForm = lexicalForm;
    return this;
  }

   /**
   * The text
   * @return lexicalForm
  **/
  @ApiModelProperty(required = true, value = "The text")
  public String getLexicalForm() {
    return lexicalForm;
  }

  public void setLexicalForm(String lexicalForm) {
    this.lexicalForm = lexicalForm;
  }

  public UtteranceDefinition startTimeOffset(String startTimeOffset) {
    this.startTimeOffset = startTimeOffset;
    return this;
  }

   /**
   * The offset from start time
   * @return startTimeOffset
  **/
  @ApiModelProperty(required = true, value = "The offset from start time")
  public String getStartTimeOffset() {
    return startTimeOffset;
  }

  public void setStartTimeOffset(String startTimeOffset) {
    this.startTimeOffset = startTimeOffset;
  }

  public UtteranceDefinition duration(String duration) {
    this.duration = duration;
    return this;
  }

   /**
   * The duration
   * @return duration
  **/
  @ApiModelProperty(required = true, value = "The duration")
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UtteranceDefinition utteranceDefinition = (UtteranceDefinition) o;
    return Objects.equals(this.sessionId, utteranceDefinition.sessionId) &&
        Objects.equals(this.isHumanTranscription, utteranceDefinition.isHumanTranscription) &&
        Objects.equals(this.lexicalForm, utteranceDefinition.lexicalForm) &&
        Objects.equals(this.startTimeOffset, utteranceDefinition.startTimeOffset) &&
        Objects.equals(this.duration, utteranceDefinition.duration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionId, isHumanTranscription, lexicalForm, startTimeOffset, duration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UtteranceDefinition {\n");
    
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    isHumanTranscription: ").append(toIndentedString(isHumanTranscription)).append("\n");
    sb.append("    lexicalForm: ").append(toIndentedString(lexicalForm)).append("\n");
    sb.append("    startTimeOffset: ").append(toIndentedString(startTimeOffset)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

