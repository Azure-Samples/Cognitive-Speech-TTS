/*
 * Speech Services API v3.0-beta1
 * Speech Services API v3.0-beta1.
 *
 * OpenAPI spec version: v3.0-beta1
 * Contact: crservice@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ModelIdentity;
import io.swagger.client.model.ProjectIdentity;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * SpeechEndpointDefinitionV30
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-02T13:09:27.002+08:00")
public class SpeechEndpointDefinitionV30 {
  @SerializedName("project")
  private ProjectIdentity project = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("concurrentRecognitions")
  private Integer concurrentRecognitions = null;

  @SerializedName("models")
  private List<ModelIdentity> models = null;

  @SerializedName("contentLoggingEnabled")
  private Boolean contentLoggingEnabled = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("properties")
  private Map<String, String> properties = null;

  @SerializedName("locale")
  private String locale = null;

  public SpeechEndpointDefinitionV30 project(ProjectIdentity project) {
    this.project = project;
    return this;
  }

   /**
   * The project, the endpoint is associated with
   * @return project
  **/
  @ApiModelProperty(value = "The project, the endpoint is associated with")
  public ProjectIdentity getProject() {
    return project;
  }

  public void setProject(ProjectIdentity project) {
    this.project = project;
  }

  public SpeechEndpointDefinitionV30 text(String text) {
    this.text = text;
    return this;
  }

   /**
   * The text used to adapt a language model for this endpoint
   * @return text
  **/
  @ApiModelProperty(value = "The text used to adapt a language model for this endpoint")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public SpeechEndpointDefinitionV30 concurrentRecognitions(Integer concurrentRecognitions) {
    this.concurrentRecognitions = concurrentRecognitions;
    return this;
  }

   /**
   * The number of concurrent recognitions the endpoint supports
   * minimum: 1
   * maximum: 20
   * @return concurrentRecognitions
  **/
  @ApiModelProperty(value = "The number of concurrent recognitions the endpoint supports")
  public Integer getConcurrentRecognitions() {
    return concurrentRecognitions;
  }

  public void setConcurrentRecognitions(Integer concurrentRecognitions) {
    this.concurrentRecognitions = concurrentRecognitions;
  }

  public SpeechEndpointDefinitionV30 models(List<ModelIdentity> models) {
    this.models = models;
    return this;
  }

  public SpeechEndpointDefinitionV30 addModelsItem(ModelIdentity modelsItem) {
    if (this.models == null) {
      this.models = new ArrayList<ModelIdentity>();
    }
    this.models.add(modelsItem);
    return this;
  }

   /**
   * Information about the deployed models
   * @return models
  **/
  @ApiModelProperty(value = "Information about the deployed models")
  public List<ModelIdentity> getModels() {
    return models;
  }

  public void setModels(List<ModelIdentity> models) {
    this.models = models;
  }

  public SpeechEndpointDefinitionV30 contentLoggingEnabled(Boolean contentLoggingEnabled) {
    this.contentLoggingEnabled = contentLoggingEnabled;
    return this;
  }

   /**
   * A value indicating whether content logging (audio &amp;amp; transcriptions) is being used for a deployment.  Suppressing content logging will result in a higher cost for the deployment.  Free subscriptions can only deploy true
   * @return contentLoggingEnabled
  **/
  @ApiModelProperty(value = "A value indicating whether content logging (audio &amp; transcriptions) is being used for a deployment.  Suppressing content logging will result in a higher cost for the deployment.  Free subscriptions can only deploy true")
  public Boolean isContentLoggingEnabled() {
    return contentLoggingEnabled;
  }

  public void setContentLoggingEnabled(Boolean contentLoggingEnabled) {
    this.contentLoggingEnabled = contentLoggingEnabled;
  }

  public SpeechEndpointDefinitionV30 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the object
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the object")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SpeechEndpointDefinitionV30 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the object
   * @return description
  **/
  @ApiModelProperty(value = "The description of the object")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SpeechEndpointDefinitionV30 properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public SpeechEndpointDefinitionV30 putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, String>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The custom properties of this entity
   * @return properties
  **/
  @ApiModelProperty(value = "The custom properties of this entity")
  public Map<String, String> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }

  public SpeechEndpointDefinitionV30 locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * The locale of the contained data
   * @return locale
  **/
  @ApiModelProperty(value = "The locale of the contained data")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpeechEndpointDefinitionV30 speechEndpointDefinitionV30 = (SpeechEndpointDefinitionV30) o;
    return Objects.equals(this.project, speechEndpointDefinitionV30.project) &&
        Objects.equals(this.text, speechEndpointDefinitionV30.text) &&
        Objects.equals(this.concurrentRecognitions, speechEndpointDefinitionV30.concurrentRecognitions) &&
        Objects.equals(this.models, speechEndpointDefinitionV30.models) &&
        Objects.equals(this.contentLoggingEnabled, speechEndpointDefinitionV30.contentLoggingEnabled) &&
        Objects.equals(this.name, speechEndpointDefinitionV30.name) &&
        Objects.equals(this.description, speechEndpointDefinitionV30.description) &&
        Objects.equals(this.properties, speechEndpointDefinitionV30.properties) &&
        Objects.equals(this.locale, speechEndpointDefinitionV30.locale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(project, text, concurrentRecognitions, models, contentLoggingEnabled, name, description, properties, locale);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpeechEndpointDefinitionV30 {\n");
    
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    concurrentRecognitions: ").append(toIndentedString(concurrentRecognitions)).append("\n");
    sb.append("    models: ").append(toIndentedString(models)).append("\n");
    sb.append("    contentLoggingEnabled: ").append(toIndentedString(contentLoggingEnabled)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

