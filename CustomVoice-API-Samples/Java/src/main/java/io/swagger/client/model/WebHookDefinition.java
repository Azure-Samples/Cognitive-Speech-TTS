/*
 * Speech Services API v3.0-beta1
 * Speech Services API v3.0-beta1.
 *
 * OpenAPI spec version: v3.0-beta1
 * Contact: crservice@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.WebHookConfiguration;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * WebHookDefinition
 */
public class WebHookDefinition {
  @SerializedName("configuration")
  private WebHookConfiguration _configuration = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  /**
   * Gets or Sets events
   */
  @JsonAdapter(EventsEnum.Adapter.class)
  public enum EventsEnum {
    NONE("None"),
    
    DATAIMPORTCOMPLETION("DataImportCompletion"),
    
    MODELADAPTATIONCOMPLETION("ModelAdaptationCompletion"),
    
    ACCURACYTESTCOMPLETION("AccuracyTestCompletion"),
    
    TRANSCRIPTIONCOMPLETION("TranscriptionCompletion"),
    
    ENDPOINTDEPLOYMENTCOMPLETION("EndpointDeploymentCompletion"),
    
    ENDPOINTDATACOLLECTIONCOMPLETION("EndpointDataCollectionCompletion"),
    
    PING("Ping");

    private String value;

    EventsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EventsEnum fromValue(String text) {
      for (EventsEnum b : EventsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EventsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EventsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EventsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EventsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("events")
  private List<EventsEnum> events = new ArrayList<EventsEnum>();

  @SerializedName("properties")
  private Map<String, String> properties = null;

  public WebHookDefinition _configuration(WebHookConfiguration _configuration) {
    this._configuration = _configuration;
    return this;
  }

   /**
   * The configuration of the web hook registration.                If the property secret is omitted or contains an empty string in a POST or PATCH request,  no signature hash will be calculated.                When retrieving web hook registration information from the service, the secret is always omitted
   * @return _configuration
  **/
  @ApiModelProperty(required = true, value = "The configuration of the web hook registration.                If the property secret is omitted or contains an empty string in a POST or PATCH request,  no signature hash will be calculated.                When retrieving web hook registration information from the service, the secret is always omitted")
  public WebHookConfiguration getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(WebHookConfiguration _configuration) {
    this._configuration = _configuration;
  }

  public WebHookDefinition active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * A value indicating whether callbacks to the registered URL are made or not
   * @return active
  **/
  @ApiModelProperty(required = true, value = "A value indicating whether callbacks to the registered URL are made or not")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public WebHookDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the object
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the object")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public WebHookDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the object
   * @return description
  **/
  @ApiModelProperty(value = "The description of the object")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public WebHookDefinition events(List<EventsEnum> events) {
    this.events = events;
    return this;
  }

  public WebHookDefinition addEventsItem(EventsEnum eventsItem) {
    this.events.add(eventsItem);
    return this;
  }

   /**
   * A collection of event types, the web hook is registered for.                Each web hook registration will support an additional even type named ping
   * @return events
  **/
  @ApiModelProperty(required = true, value = "A collection of event types, the web hook is registered for.                Each web hook registration will support an additional even type named ping")
  public List<EventsEnum> getEvents() {
    return events;
  }

  public void setEvents(List<EventsEnum> events) {
    this.events = events;
  }

  public WebHookDefinition properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public WebHookDefinition putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, String>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The custom properties of this entity
   * @return properties
  **/
  @ApiModelProperty(value = "The custom properties of this entity")
  public Map<String, String> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebHookDefinition webHookDefinition = (WebHookDefinition) o;
    return Objects.equals(this._configuration, webHookDefinition._configuration) &&
        Objects.equals(this.active, webHookDefinition.active) &&
        Objects.equals(this.name, webHookDefinition.name) &&
        Objects.equals(this.description, webHookDefinition.description) &&
        Objects.equals(this.events, webHookDefinition.events) &&
        Objects.equals(this.properties, webHookDefinition.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_configuration, active, name, description, events, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebHookDefinition {\n");
    
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

