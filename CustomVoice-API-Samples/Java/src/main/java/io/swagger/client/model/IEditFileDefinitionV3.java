/*
 * Speech Services API v3.0-beta1
 * Speech Services API v3.0-beta1.
 *
 * OpenAPI spec version: v3.0-beta1
 * Contact: crservice@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * IEditFileDefinitionV3
 */
public class IEditFileDefinitionV3 {
  @SerializedName("fileId")
  private UUID fileId = null;

  @SerializedName("newName")
  private String newName = null;

  @SerializedName("newSsml")
  private String newSsml = null;

  /**
   * The new status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NONE("None"),
    
    NEW("New"),
    
    EDITING("Editing"),
    
    COMPLETED("Completed"),
    
    REDO("Redo"),
    
    APPROVED("Approved");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public IEditFileDefinitionV3 fileId(UUID fileId) {
    this.fileId = fileId;
    return this;
  }

   /**
   * The file id
   * @return fileId
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", required = true, value = "The file id")
  public UUID getFileId() {
    return fileId;
  }

  public void setFileId(UUID fileId) {
    this.fileId = fileId;
  }

  public IEditFileDefinitionV3 newName(String newName) {
    this.newName = newName;
    return this;
  }

   /**
   * The new name
   * @return newName
  **/
  @ApiModelProperty(value = "The new name")
  public String getNewName() {
    return newName;
  }

  public void setNewName(String newName) {
    this.newName = newName;
  }

  public IEditFileDefinitionV3 newSsml(String newSsml) {
    this.newSsml = newSsml;
    return this;
  }

   /**
   * The new ssml
   * @return newSsml
  **/
  @ApiModelProperty(value = "The new ssml")
  public String getNewSsml() {
    return newSsml;
  }

  public void setNewSsml(String newSsml) {
    this.newSsml = newSsml;
  }

  public IEditFileDefinitionV3 status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The new status
   * @return status
  **/
  @ApiModelProperty(value = "The new status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IEditFileDefinitionV3 ieditFileDefinitionV3 = (IEditFileDefinitionV3) o;
    return Objects.equals(this.fileId, ieditFileDefinitionV3.fileId) &&
        Objects.equals(this.newName, ieditFileDefinitionV3.newName) &&
        Objects.equals(this.newSsml, ieditFileDefinitionV3.newSsml) &&
        Objects.equals(this.status, ieditFileDefinitionV3.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, newName, newSsml, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IEditFileDefinitionV3 {\n");
    
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    newName: ").append(toIndentedString(newName)).append("\n");
    sb.append("    newSsml: ").append(toIndentedString(newSsml)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

