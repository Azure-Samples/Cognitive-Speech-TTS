/*
 * Speech Services API v3.0-beta1
 * Speech Services API v3.0-beta1.
 *
 * OpenAPI spec version: v3.0-beta1
 * Contact: crservice@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DatasetIdentity;
import io.swagger.client.model.ModelIdentity;
import io.swagger.client.model.ProjectIdentity;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * TranscriptionDefinitionV30
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-02T13:09:27.002+08:00")
public class TranscriptionDefinitionV30 {
  @SerializedName("project")
  private ProjectIdentity project = null;

  @SerializedName("datasets")
  private List<DatasetIdentity> datasets = null;

  @SerializedName("recordingsUrls")
  private List<String> recordingsUrls = null;

  @SerializedName("models")
  private List<ModelIdentity> models = null;

  @SerializedName("locale")
  private String locale = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("properties")
  private Map<String, String> properties = null;

  public TranscriptionDefinitionV30 project(ProjectIdentity project) {
    this.project = project;
    return this;
  }

   /**
   * The project, the transcription is associated with
   * @return project
  **/
  @ApiModelProperty(value = "The project, the transcription is associated with")
  public ProjectIdentity getProject() {
    return project;
  }

  public void setProject(ProjectIdentity project) {
    this.project = project;
  }

  public TranscriptionDefinitionV30 datasets(List<DatasetIdentity> datasets) {
    this.datasets = datasets;
    return this;
  }

  public TranscriptionDefinitionV30 addDatasetsItem(DatasetIdentity datasetsItem) {
    if (this.datasets == null) {
      this.datasets = new ArrayList<DatasetIdentity>();
    }
    this.datasets.add(datasetsItem);
    return this;
  }

   /**
   * A list of acoustic or audio files datasets containing the audio files that will be transcribed
   * @return datasets
  **/
  @ApiModelProperty(value = "A list of acoustic or audio files datasets containing the audio files that will be transcribed")
  public List<DatasetIdentity> getDatasets() {
    return datasets;
  }

  public void setDatasets(List<DatasetIdentity> datasets) {
    this.datasets = datasets;
  }

  public TranscriptionDefinitionV30 recordingsUrls(List<String> recordingsUrls) {
    this.recordingsUrls = recordingsUrls;
    return this;
  }

  public TranscriptionDefinitionV30 addRecordingsUrlsItem(String recordingsUrlsItem) {
    if (this.recordingsUrls == null) {
      this.recordingsUrls = new ArrayList<String>();
    }
    this.recordingsUrls.add(recordingsUrlsItem);
    return this;
  }

   /**
   * Get recordingsUrls
   * @return recordingsUrls
  **/
  @ApiModelProperty(value = "")
  public List<String> getRecordingsUrls() {
    return recordingsUrls;
  }

  public void setRecordingsUrls(List<String> recordingsUrls) {
    this.recordingsUrls = recordingsUrls;
  }

  public TranscriptionDefinitionV30 models(List<ModelIdentity> models) {
    this.models = models;
    return this;
  }

  public TranscriptionDefinitionV30 addModelsItem(ModelIdentity modelsItem) {
    if (this.models == null) {
      this.models = new ArrayList<ModelIdentity>();
    }
    this.models.add(modelsItem);
    return this;
  }

   /**
   * Get models
   * @return models
  **/
  @ApiModelProperty(value = "")
  public List<ModelIdentity> getModels() {
    return models;
  }

  public void setModels(List<ModelIdentity> models) {
    this.models = models;
  }

  public TranscriptionDefinitionV30 locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * The locale of the contained data
   * @return locale
  **/
  @ApiModelProperty(value = "The locale of the contained data")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public TranscriptionDefinitionV30 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the object
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the object")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TranscriptionDefinitionV30 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the object
   * @return description
  **/
  @ApiModelProperty(value = "The description of the object")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TranscriptionDefinitionV30 properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public TranscriptionDefinitionV30 putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, String>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The custom properties of this entity
   * @return properties
  **/
  @ApiModelProperty(value = "The custom properties of this entity")
  public Map<String, String> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TranscriptionDefinitionV30 transcriptionDefinitionV30 = (TranscriptionDefinitionV30) o;
    return Objects.equals(this.project, transcriptionDefinitionV30.project) &&
        Objects.equals(this.datasets, transcriptionDefinitionV30.datasets) &&
        Objects.equals(this.recordingsUrls, transcriptionDefinitionV30.recordingsUrls) &&
        Objects.equals(this.models, transcriptionDefinitionV30.models) &&
        Objects.equals(this.locale, transcriptionDefinitionV30.locale) &&
        Objects.equals(this.name, transcriptionDefinitionV30.name) &&
        Objects.equals(this.description, transcriptionDefinitionV30.description) &&
        Objects.equals(this.properties, transcriptionDefinitionV30.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(project, datasets, recordingsUrls, models, locale, name, description, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TranscriptionDefinitionV30 {\n");
    
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    datasets: ").append(toIndentedString(datasets)).append("\n");
    sb.append("    recordingsUrls: ").append(toIndentedString(recordingsUrls)).append("\n");
    sb.append("    models: ").append(toIndentedString(models)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

