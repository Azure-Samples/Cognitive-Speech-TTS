/*
 * Speech Services API v3.0-beta1
 * Speech Services API v3.0-beta1.
 *
 * OpenAPI spec version: v3.0-beta1
 * Contact: crservice@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * IReadOnlyDictionary21
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-02T13:09:27.002+08:00")
public class IReadOnlyDictionary21 {
  @SerializedName("None")
  private List<String> none = null;

  @SerializedName("Acoustic")
  private List<String> acoustic = null;

  @SerializedName("Language")
  private List<String> language = null;

  @SerializedName("AcousticAndLanguage")
  private List<String> acousticAndLanguage = null;

  @SerializedName("CustomVoice")
  private List<String> customVoice = null;

  @SerializedName("LanguageGeneration")
  private List<String> languageGeneration = null;

  @SerializedName("Sentiment")
  private List<String> sentiment = null;

  @SerializedName("LanguageIdentification")
  private List<String> languageIdentification = null;

  @SerializedName("Diarization")
  private List<String> diarization = null;

  public IReadOnlyDictionary21 none(List<String> none) {
    this.none = none;
    return this;
  }

  public IReadOnlyDictionary21 addNoneItem(String noneItem) {
    if (this.none == null) {
      this.none = new ArrayList<String>();
    }
    this.none.add(noneItem);
    return this;
  }

   /**
   * Get none
   * @return none
  **/
  @ApiModelProperty(value = "")
  public List<String> getNone() {
    return none;
  }

  public void setNone(List<String> none) {
    this.none = none;
  }

  public IReadOnlyDictionary21 acoustic(List<String> acoustic) {
    this.acoustic = acoustic;
    return this;
  }

  public IReadOnlyDictionary21 addAcousticItem(String acousticItem) {
    if (this.acoustic == null) {
      this.acoustic = new ArrayList<String>();
    }
    this.acoustic.add(acousticItem);
    return this;
  }

   /**
   * Get acoustic
   * @return acoustic
  **/
  @ApiModelProperty(value = "")
  public List<String> getAcoustic() {
    return acoustic;
  }

  public void setAcoustic(List<String> acoustic) {
    this.acoustic = acoustic;
  }

  public IReadOnlyDictionary21 language(List<String> language) {
    this.language = language;
    return this;
  }

  public IReadOnlyDictionary21 addLanguageItem(String languageItem) {
    if (this.language == null) {
      this.language = new ArrayList<String>();
    }
    this.language.add(languageItem);
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @ApiModelProperty(value = "")
  public List<String> getLanguage() {
    return language;
  }

  public void setLanguage(List<String> language) {
    this.language = language;
  }

  public IReadOnlyDictionary21 acousticAndLanguage(List<String> acousticAndLanguage) {
    this.acousticAndLanguage = acousticAndLanguage;
    return this;
  }

  public IReadOnlyDictionary21 addAcousticAndLanguageItem(String acousticAndLanguageItem) {
    if (this.acousticAndLanguage == null) {
      this.acousticAndLanguage = new ArrayList<String>();
    }
    this.acousticAndLanguage.add(acousticAndLanguageItem);
    return this;
  }

   /**
   * Get acousticAndLanguage
   * @return acousticAndLanguage
  **/
  @ApiModelProperty(value = "")
  public List<String> getAcousticAndLanguage() {
    return acousticAndLanguage;
  }

  public void setAcousticAndLanguage(List<String> acousticAndLanguage) {
    this.acousticAndLanguage = acousticAndLanguage;
  }

  public IReadOnlyDictionary21 customVoice(List<String> customVoice) {
    this.customVoice = customVoice;
    return this;
  }

  public IReadOnlyDictionary21 addCustomVoiceItem(String customVoiceItem) {
    if (this.customVoice == null) {
      this.customVoice = new ArrayList<String>();
    }
    this.customVoice.add(customVoiceItem);
    return this;
  }

   /**
   * Get customVoice
   * @return customVoice
  **/
  @ApiModelProperty(value = "")
  public List<String> getCustomVoice() {
    return customVoice;
  }

  public void setCustomVoice(List<String> customVoice) {
    this.customVoice = customVoice;
  }

  public IReadOnlyDictionary21 languageGeneration(List<String> languageGeneration) {
    this.languageGeneration = languageGeneration;
    return this;
  }

  public IReadOnlyDictionary21 addLanguageGenerationItem(String languageGenerationItem) {
    if (this.languageGeneration == null) {
      this.languageGeneration = new ArrayList<String>();
    }
    this.languageGeneration.add(languageGenerationItem);
    return this;
  }

   /**
   * Get languageGeneration
   * @return languageGeneration
  **/
  @ApiModelProperty(value = "")
  public List<String> getLanguageGeneration() {
    return languageGeneration;
  }

  public void setLanguageGeneration(List<String> languageGeneration) {
    this.languageGeneration = languageGeneration;
  }

  public IReadOnlyDictionary21 sentiment(List<String> sentiment) {
    this.sentiment = sentiment;
    return this;
  }

  public IReadOnlyDictionary21 addSentimentItem(String sentimentItem) {
    if (this.sentiment == null) {
      this.sentiment = new ArrayList<String>();
    }
    this.sentiment.add(sentimentItem);
    return this;
  }

   /**
   * Get sentiment
   * @return sentiment
  **/
  @ApiModelProperty(value = "")
  public List<String> getSentiment() {
    return sentiment;
  }

  public void setSentiment(List<String> sentiment) {
    this.sentiment = sentiment;
  }

  public IReadOnlyDictionary21 languageIdentification(List<String> languageIdentification) {
    this.languageIdentification = languageIdentification;
    return this;
  }

  public IReadOnlyDictionary21 addLanguageIdentificationItem(String languageIdentificationItem) {
    if (this.languageIdentification == null) {
      this.languageIdentification = new ArrayList<String>();
    }
    this.languageIdentification.add(languageIdentificationItem);
    return this;
  }

   /**
   * Get languageIdentification
   * @return languageIdentification
  **/
  @ApiModelProperty(value = "")
  public List<String> getLanguageIdentification() {
    return languageIdentification;
  }

  public void setLanguageIdentification(List<String> languageIdentification) {
    this.languageIdentification = languageIdentification;
  }

  public IReadOnlyDictionary21 diarization(List<String> diarization) {
    this.diarization = diarization;
    return this;
  }

  public IReadOnlyDictionary21 addDiarizationItem(String diarizationItem) {
    if (this.diarization == null) {
      this.diarization = new ArrayList<String>();
    }
    this.diarization.add(diarizationItem);
    return this;
  }

   /**
   * Get diarization
   * @return diarization
  **/
  @ApiModelProperty(value = "")
  public List<String> getDiarization() {
    return diarization;
  }

  public void setDiarization(List<String> diarization) {
    this.diarization = diarization;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IReadOnlyDictionary21 ireadOnlyDictionary21 = (IReadOnlyDictionary21) o;
    return Objects.equals(this.none, ireadOnlyDictionary21.none) &&
        Objects.equals(this.acoustic, ireadOnlyDictionary21.acoustic) &&
        Objects.equals(this.language, ireadOnlyDictionary21.language) &&
        Objects.equals(this.acousticAndLanguage, ireadOnlyDictionary21.acousticAndLanguage) &&
        Objects.equals(this.customVoice, ireadOnlyDictionary21.customVoice) &&
        Objects.equals(this.languageGeneration, ireadOnlyDictionary21.languageGeneration) &&
        Objects.equals(this.sentiment, ireadOnlyDictionary21.sentiment) &&
        Objects.equals(this.languageIdentification, ireadOnlyDictionary21.languageIdentification) &&
        Objects.equals(this.diarization, ireadOnlyDictionary21.diarization);
  }

  @Override
  public int hashCode() {
    return Objects.hash(none, acoustic, language, acousticAndLanguage, customVoice, languageGeneration, sentiment, languageIdentification, diarization);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IReadOnlyDictionary21 {\n");
    
    sb.append("    none: ").append(toIndentedString(none)).append("\n");
    sb.append("    acoustic: ").append(toIndentedString(acoustic)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    acousticAndLanguage: ").append(toIndentedString(acousticAndLanguage)).append("\n");
    sb.append("    customVoice: ").append(toIndentedString(customVoice)).append("\n");
    sb.append("    languageGeneration: ").append(toIndentedString(languageGeneration)).append("\n");
    sb.append("    sentiment: ").append(toIndentedString(sentiment)).append("\n");
    sb.append("    languageIdentification: ").append(toIndentedString(languageIdentification)).append("\n");
    sb.append("    diarization: ").append(toIndentedString(diarization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

