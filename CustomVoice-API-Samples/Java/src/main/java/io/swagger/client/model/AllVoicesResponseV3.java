/*
 * Speech Services API v3.0-beta1
 * Speech Services API v3.0-beta1.
 *
 * OpenAPI spec version: v3.0-beta1
 * Contact: crservice@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * AllVoicesResponseV3
 */
public class AllVoicesResponseV3 {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("locale")
  private String locale = null;

  @SerializedName("localeDescription")
  private String localeDescription = null;

  @SerializedName("gender")
  private String gender = null;

  /**
   * The voice type
   */
  @JsonAdapter(VoiceTypeEnum.Adapter.class)
  public enum VoiceTypeEnum {
    STANDARDVOICE("StandardVoice"),
    
    NEURALVOICE("NeuralVoice"),
    
    CUSTOMVOICE("CustomVoice");

    private String value;

    VoiceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VoiceTypeEnum fromValue(String text) {
      for (VoiceTypeEnum b : VoiceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<VoiceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VoiceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VoiceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return VoiceTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("voiceType")
  private VoiceTypeEnum voiceType = null;

  public AllVoicesResponseV3 id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The voice id
   * @return id
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", required = true, value = "The voice id")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public AllVoicesResponseV3 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The voice Name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The voice Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AllVoicesResponseV3 locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * The locale
   * @return locale
  **/
  @ApiModelProperty(required = true, value = "The locale")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public AllVoicesResponseV3 localeDescription(String localeDescription) {
    this.localeDescription = localeDescription;
    return this;
  }

   /**
   * The Locale Description
   * @return localeDescription
  **/
  @ApiModelProperty(required = true, value = "The Locale Description")
  public String getLocaleDescription() {
    return localeDescription;
  }

  public void setLocaleDescription(String localeDescription) {
    this.localeDescription = localeDescription;
  }

  public AllVoicesResponseV3 gender(String gender) {
    this.gender = gender;
    return this;
  }

   /**
   * The voice gender
   * @return gender
  **/
  @ApiModelProperty(required = true, value = "The voice gender")
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  public AllVoicesResponseV3 voiceType(VoiceTypeEnum voiceType) {
    this.voiceType = voiceType;
    return this;
  }

   /**
   * The voice type
   * @return voiceType
  **/
  @ApiModelProperty(required = true, value = "The voice type")
  public VoiceTypeEnum getVoiceType() {
    return voiceType;
  }

  public void setVoiceType(VoiceTypeEnum voiceType) {
    this.voiceType = voiceType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllVoicesResponseV3 allVoicesResponseV3 = (AllVoicesResponseV3) o;
    return Objects.equals(this.id, allVoicesResponseV3.id) &&
        Objects.equals(this.name, allVoicesResponseV3.name) &&
        Objects.equals(this.locale, allVoicesResponseV3.locale) &&
        Objects.equals(this.localeDescription, allVoicesResponseV3.localeDescription) &&
        Objects.equals(this.gender, allVoicesResponseV3.gender) &&
        Objects.equals(this.voiceType, allVoicesResponseV3.voiceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, locale, localeDescription, gender, voiceType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllVoicesResponseV3 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    localeDescription: ").append(toIndentedString(localeDescription)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    voiceType: ").append(toIndentedString(voiceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

