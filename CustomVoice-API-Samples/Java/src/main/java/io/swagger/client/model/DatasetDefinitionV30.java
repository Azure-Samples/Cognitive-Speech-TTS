/*
 * Speech Services API v3.0-beta1
 * Speech Services API v3.0-beta1.
 *
 * OpenAPI spec version: v3.0-beta1
 * Contact: crservice@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ProjectIdentity;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * DatasetDefinitionV30
 */
public class DatasetDefinitionV30 {
  @SerializedName("project")
  private ProjectIdentity project = null;

  /**
   * The kind of the dataset (e.g., acoustic data, language data, ...)
   */
  @JsonAdapter(DataImportKindEnum.Adapter.class)
  public enum DataImportKindEnum {
    NONE("None"),
    
    LANGUAGE("Language"),
    
    ACOUSTIC("Acoustic"),
    
    PRONUNCIATION("Pronunciation"),
    
    CUSTOMVOICE("CustomVoice"),
    
    LANGUAGEGENERATION("LanguageGeneration"),
    
    AUDIOFILES("AudioFiles");

    private String value;

    DataImportKindEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DataImportKindEnum fromValue(String text) {
      for (DataImportKindEnum b : DataImportKindEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DataImportKindEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DataImportKindEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DataImportKindEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DataImportKindEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("dataImportKind")
  private DataImportKindEnum dataImportKind = null;

  @SerializedName("dataUrl")
  private String dataUrl = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("properties")
  private Map<String, String> properties = null;

  @SerializedName("locale")
  private String locale = null;

  public DatasetDefinitionV30 project(ProjectIdentity project) {
    this.project = project;
    return this;
  }

   /**
   * The project, the dataset is associated with
   * @return project
  **/
  @ApiModelProperty(value = "The project, the dataset is associated with")
  public ProjectIdentity getProject() {
    return project;
  }

  public void setProject(ProjectIdentity project) {
    this.project = project;
  }

  public DatasetDefinitionV30 dataImportKind(DataImportKindEnum dataImportKind) {
    this.dataImportKind = dataImportKind;
    return this;
  }

   /**
   * The kind of the dataset (e.g., acoustic data, language data, ...)
   * @return dataImportKind
  **/
  @ApiModelProperty(required = true, value = "The kind of the dataset (e.g., acoustic data, language data, ...)")
  public DataImportKindEnum getDataImportKind() {
    return dataImportKind;
  }

  public void setDataImportKind(DataImportKindEnum dataImportKind) {
    this.dataImportKind = dataImportKind;
  }

  public DatasetDefinitionV30 dataUrl(String dataUrl) {
    this.dataUrl = dataUrl;
    return this;
  }

   /**
   * The URL of the data for the dataset
   * @return dataUrl
  **/
  @ApiModelProperty(required = true, value = "The URL of the data for the dataset")
  public String getDataUrl() {
    return dataUrl;
  }

  public void setDataUrl(String dataUrl) {
    this.dataUrl = dataUrl;
  }

  public DatasetDefinitionV30 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the object
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the object")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DatasetDefinitionV30 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the object
   * @return description
  **/
  @ApiModelProperty(value = "The description of the object")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DatasetDefinitionV30 properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public DatasetDefinitionV30 putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, String>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * The custom properties of this entity
   * @return properties
  **/
  @ApiModelProperty(value = "The custom properties of this entity")
  public Map<String, String> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }

  public DatasetDefinitionV30 locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * The locale of the contained data
   * @return locale
  **/
  @ApiModelProperty(value = "The locale of the contained data")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatasetDefinitionV30 datasetDefinitionV30 = (DatasetDefinitionV30) o;
    return Objects.equals(this.project, datasetDefinitionV30.project) &&
        Objects.equals(this.dataImportKind, datasetDefinitionV30.dataImportKind) &&
        Objects.equals(this.dataUrl, datasetDefinitionV30.dataUrl) &&
        Objects.equals(this.name, datasetDefinitionV30.name) &&
        Objects.equals(this.description, datasetDefinitionV30.description) &&
        Objects.equals(this.properties, datasetDefinitionV30.properties) &&
        Objects.equals(this.locale, datasetDefinitionV30.locale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(project, dataImportKind, dataUrl, name, description, properties, locale);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatasetDefinitionV30 {\n");
    
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    dataImportKind: ").append(toIndentedString(dataImportKind)).append("\n");
    sb.append("    dataUrl: ").append(toIndentedString(dataUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

